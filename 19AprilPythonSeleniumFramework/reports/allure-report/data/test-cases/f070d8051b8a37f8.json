{"uid":"f070d8051b8a37f8","name":"test_valid_login_add_and_remove_cart[Samsung galaxy s6]","fullName":"tests.test_cart.TestLoginExcel#test_valid_login_add_and_remove_cart","historyId":"ddecd4be7803d2a74e67cf45c11fbfb1","time":{"start":1752076210370,"stop":1752076221211,"duration":10841},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x0000000100a64e6c cxxbridge1$str$ptr + 2722840\n1   chromedriver                        0x0000000100a5cd74 cxxbridge1$str$ptr + 2689824\n2   chromedriver                        0x00000001005ae3ec cxxbridge1$string$len + 90648\n3   chromedriver                        0x00000001005f5544 cxxbridge1$string$len + 381808\n4   chromedriver                        0x0000000100636934 cxxbridge1$string$len + 649056\n5   chromedriver                        0x00000001005e9834 cxxbridge1$string$len + 333408\n6   chromedriver                        0x0000000100a27f88 cxxbridge1$str$ptr + 2473268\n7   chromedriver                        0x0000000100a2b1f4 cxxbridge1$str$ptr + 2486176\n8   chromedriver                        0x0000000100a099d0 cxxbridge1$str$ptr + 2348924\n9   chromedriver                        0x0000000100a2bab0 cxxbridge1$str$ptr + 2488412\n10  chromedriver                        0x00000001009faa60 cxxbridge1$str$ptr + 2287628\n11  chromedriver                        0x0000000100a4b9a0 cxxbridge1$str$ptr + 2619212\n12  chromedriver                        0x0000000100a4bb2c cxxbridge1$str$ptr + 2619608\n13  chromedriver                        0x0000000100a5c9b0 cxxbridge1$str$ptr + 2688860\n14  libsystem_pthread.dylib             0x000000019bb3c2e4 _pthread_start + 136\n15  libsystem_pthread.dylib             0x000000019bb370fc thread_start + 8","statusTrace":"self = <test_cart.TestLoginExcel object at 0x104217eb0>, product = 'Samsung galaxy s6'\n\n    @pytest.mark.parametrize(\"product\",product_data[\"products\"])\n    def test_valid_login_add_and_remove_cart(self, product):\n       login = LoginPage(self.driver)\n       login.open_login_modal()\n       login.login(\"pavanol\", \"test@123\")\n       logger.info(\"user login successfully\")\n    \n    \n       home = HomePage(self.driver)\n>      home.add_product_to_cart(product)\n\ntests/test_cart.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/HomePage.py:14: in add_product_to_cart\n    WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e87afa01a910b4a8004366f21134a218\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x104276c20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000100a64e6c cxxbridge1$str$ptr + 2722840\nE       1   chromedriver                        0x0000000100a5cd74 cxxbridge1$str$ptr + 2689824\nE       2   chromedriver                        0x00000001005ae3ec cxxbridge1$string$len + 90648\nE       3   chromedriver                        0x00000001005f5544 cxxbridge1$string$len + 381808\nE       4   chromedriver                        0x0000000100636934 cxxbridge1$string$len + 649056\nE       5   chromedriver                        0x00000001005e9834 cxxbridge1$string$len + 333408\nE       6   chromedriver                        0x0000000100a27f88 cxxbridge1$str$ptr + 2473268\nE       7   chromedriver                        0x0000000100a2b1f4 cxxbridge1$str$ptr + 2486176\nE       8   chromedriver                        0x0000000100a099d0 cxxbridge1$str$ptr + 2348924\nE       9   chromedriver                        0x0000000100a2bab0 cxxbridge1$str$ptr + 2488412\nE       10  chromedriver                        0x00000001009faa60 cxxbridge1$str$ptr + 2287628\nE       11  chromedriver                        0x0000000100a4b9a0 cxxbridge1$str$ptr + 2619212\nE       12  chromedriver                        0x0000000100a4bb2c cxxbridge1$str$ptr + 2619608\nE       13  chromedriver                        0x0000000100a5c9b0 cxxbridge1$str$ptr + 2688860\nE       14  libsystem_pthread.dylib             0x000000019bb3c2e4 _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x000000019bb370fc thread_start + 8\n\n../../../anaconda3/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"delete_output_dir","time":{"start":1752076190571,"stop":1752076190571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1752076190571,"stop":1752076202861,"duration":12290},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1752076190571,"stop":1752076190571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1752076190571,"stop":1752076190571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1752076190571,"stop":1752076190571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x0000000100a64e6c cxxbridge1$str$ptr + 2722840\n1   chromedriver                        0x0000000100a5cd74 cxxbridge1$str$ptr + 2689824\n2   chromedriver                        0x00000001005ae3ec cxxbridge1$string$len + 90648\n3   chromedriver                        0x00000001005f5544 cxxbridge1$string$len + 381808\n4   chromedriver                        0x0000000100636934 cxxbridge1$string$len + 649056\n5   chromedriver                        0x00000001005e9834 cxxbridge1$string$len + 333408\n6   chromedriver                        0x0000000100a27f88 cxxbridge1$str$ptr + 2473268\n7   chromedriver                        0x0000000100a2b1f4 cxxbridge1$str$ptr + 2486176\n8   chromedriver                        0x0000000100a099d0 cxxbridge1$str$ptr + 2348924\n9   chromedriver                        0x0000000100a2bab0 cxxbridge1$str$ptr + 2488412\n10  chromedriver                        0x00000001009faa60 cxxbridge1$str$ptr + 2287628\n11  chromedriver                        0x0000000100a4b9a0 cxxbridge1$str$ptr + 2619212\n12  chromedriver                        0x0000000100a4bb2c cxxbridge1$str$ptr + 2619608\n13  chromedriver                        0x0000000100a5c9b0 cxxbridge1$str$ptr + 2688860\n14  libsystem_pthread.dylib             0x000000019bb3c2e4 _pthread_start + 136\n15  libsystem_pthread.dylib             0x000000019bb370fc thread_start + 8","statusTrace":"self = <test_cart.TestLoginExcel object at 0x104217eb0>, product = 'Samsung galaxy s6'\n\n    @pytest.mark.parametrize(\"product\",product_data[\"products\"])\n    def test_valid_login_add_and_remove_cart(self, product):\n       login = LoginPage(self.driver)\n       login.open_login_modal()\n       login.login(\"pavanol\", \"test@123\")\n       logger.info(\"user login successfully\")\n    \n    \n       home = HomePage(self.driver)\n>      home.add_product_to_cart(product)\n\ntests/test_cart.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/HomePage.py:14: in add_product_to_cart\n    WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e87afa01a910b4a8004366f21134a218\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x104276c20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000100a64e6c cxxbridge1$str$ptr + 2722840\nE       1   chromedriver                        0x0000000100a5cd74 cxxbridge1$str$ptr + 2689824\nE       2   chromedriver                        0x00000001005ae3ec cxxbridge1$string$len + 90648\nE       3   chromedriver                        0x00000001005f5544 cxxbridge1$string$len + 381808\nE       4   chromedriver                        0x0000000100636934 cxxbridge1$string$len + 649056\nE       5   chromedriver                        0x00000001005e9834 cxxbridge1$string$len + 333408\nE       6   chromedriver                        0x0000000100a27f88 cxxbridge1$str$ptr + 2473268\nE       7   chromedriver                        0x0000000100a2b1f4 cxxbridge1$str$ptr + 2486176\nE       8   chromedriver                        0x0000000100a099d0 cxxbridge1$str$ptr + 2348924\nE       9   chromedriver                        0x0000000100a2bab0 cxxbridge1$str$ptr + 2488412\nE       10  chromedriver                        0x00000001009faa60 cxxbridge1$str$ptr + 2287628\nE       11  chromedriver                        0x0000000100a4b9a0 cxxbridge1$str$ptr + 2619212\nE       12  chromedriver                        0x0000000100a4bb2c cxxbridge1$str$ptr + 2619608\nE       13  chromedriver                        0x0000000100a5c9b0 cxxbridge1$str$ptr + 2688860\nE       14  libsystem_pthread.dylib             0x000000019bb3c2e4 _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x000000019bb370fc thread_start + 8\n\n../../../anaconda3/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"1cd92c766a40b8e","name":"log","source":"1cd92c766a40b8e.txt","type":"text/plain","size":67},{"uid":"c0514f893827f24b","name":"stdout","source":"c0514f893827f24b.txt","type":"text/plain","size":1451}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1752076221424,"stop":1752076221566,"duration":142},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_cart"},{"name":"subSuite","value":"TestLoginExcel"},{"name":"host","value":"Ranjeet-MacBook-Pro.local"},{"name":"thread","value":"86477-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"product","value":"'Samsung galaxy s6'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"f070d8051b8a37f8.json","parameterValues":["'Samsung galaxy s6'"]}